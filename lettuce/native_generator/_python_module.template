import torch
import os

# on windows add cuda path for
# native module to find all dll's
if os.name == 'nt':
    os.add_dll_directory(os.path.join(os.environ['CUDA_PATH'], 'bin'))

import {module}

{py_buffer}

def resolve(stencil: str,
            collision: str,
            equilibrium: str = None,
            stream: str = None,
            support_no_stream: bool = None,
            support_no_collision: bool = None):
    stream = stream if stream is not None else 'standard'
    equilibrium = equilibrium if equilibrium is not None else ''

    nsm = 'Masked' if support_no_stream is not None and support_no_stream else ''
    ncm = 'Masked' if support_no_collision is not None and support_no_collision else ''

    name = f"{{stencil}}_{{collision}}{{equilibrium}}{{ncm}}_{{stream}}{{nsm}}"
    if name in globals():
        return globals()[name]

    return None
